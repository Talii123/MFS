package friedman.tal.mfs.agreements;

import java.io.InvalidObjectException;
import java.io.ObjectInputStream;
import java.io.Serializable;


public class AgreementFormLogicalKey implements Serializable {
	// auto-generated by eclipse
	private static final long serialVersionUID = -8465390902220516789L;
	
	private final String _agreementFormName;
	private final int _agreementFormVersion;
	
	public AgreementFormLogicalKey(String anAgreementName, int anAgreementVersion) {
		this._agreementFormName = anAgreementName.trim();	// fine if this throws an NPE
		this._agreementFormVersion = anAgreementVersion;
	}
	
	public String getFormName() {
		return this._agreementFormName;
	}
	
	public int getFormVersion() {
		return this._agreementFormVersion;
	}

	@Override
	public boolean equals(Object other) {
		if (this == other) return true;
		if (!(other instanceof AgreementFormLogicalKey)) return false;
		AgreementFormLogicalKey otherKey = (AgreementFormLogicalKey)other;
		return (this._agreementFormName == otherKey._agreementFormName || (this._agreementFormName != null && this._agreementFormName.equals(otherKey._agreementFormName))) &&
				(this._agreementFormVersion == otherKey._agreementFormVersion);

	}

	@Override
	public int hashCode() {
		int result = 17;
		result = 31 * result + (this._agreementFormName != null ?  this._agreementFormName.hashCode() : 0);
		result = 31 * result + this._agreementFormVersion;
		return result;
	}

	@Override
	public String toString() {
		return "AgreementFormLogicalKey(\"" + this._agreementFormName + "\", " + this._agreementFormVersion+")";
	}
	
	private Object writeReplace() {
		return new SerializationProxy(this);
	}
	
	private void readObject(ObjectInputStream in) throws InvalidObjectException {
		throw new InvalidObjectException("Proxy required!");
	}
	
	private static final class SerializationProxy implements Serializable {
		private static final long serialVersionUID = 983145496320950528L;

		private String _serAgreementFormName;
		private int _serAgreementFormVersion;
		
		private SerializationProxy(AgreementFormLogicalKey aKey) {
			this._serAgreementFormName = aKey.getFormName();
			this._serAgreementFormVersion = aKey.getFormVersion();
		}
		
		private Object readResolve() {
			return new AgreementFormLogicalKey(_serAgreementFormName, _serAgreementFormVersion);
		}
	}
	
}
